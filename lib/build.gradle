/*
 * This file was generated by the Gradle 'init' task.
 * Refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 *
 * Further changes are implemented based on chatGPT suggestions. Keywords include:
 * - use spock
 * - keep unit tests and integration tests separate
 */

plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

archivesBaseName = 'flatorm'

configurations {
    integrationTestImplementation {
        extendsFrom testImplementation
    }
    integrationTestRuntimeOnly {
        extendsFrom testRuntimeOnly
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integrationTest/groovy')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
    }
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
    testImplementation 'org.spockframework:spock-core:2.0-M3-groovy-3.0'

    // Add dependencies for integration tests
    integrationTestImplementation 'org.spockframework:spock-core:2.0-M3-groovy-3.0'
    integrationTestImplementation sourceSets.main.output
}

// Configure the built-in test suite to use Spock
testing {
    suites {
        test {
            useSpock('2.2-groovy-3.0')
        }
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    // Configure test framework manually for integration tests, because useSpock() does not work here
    useJUnitPlatform {
        includeEngines 'spock'
    }
}

check {
    dependsOn integrationTest
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}
